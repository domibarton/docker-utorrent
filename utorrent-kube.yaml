apiVersion: v1
kind: Namespace
metadata:
  name: utorrent

---

kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  name: ut-sc
  namespace: utorrent
provisioner: kubernetes.io/no-provisioner
volumeBindingMode: WaitForFirstConsumer

---

kind: PersistentVolume
apiVersion: v1
metadata:
  name: ut-pv
  namespace: utorrent
spec:
  storageClassName: ut-sc
  capacity:
    storage: 100Gi
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  hostPath:
    path: "/shared"

---

kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: ut-pvc
  namespace: utorrent
spec:
  storageClassName: ut-sc
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 100Gi

---

apiVersion: v1
kind: Service
metadata:
  namespace: utorrent
  name: utorrent
spec:
  ports:
  - name: "8080"
    port: 8080
    targetPort: 8080
  - name: "6881"
    port: 6881
    targetPort: 6881
  selector:
    app: utorrent
status:
  loadBalancer: {}

---

apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: utorrent
  name: utorrent
spec:
  replicas: 1
  selector:
      matchLabels:
        app: utorrent
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: utorrent
    spec:
      containers:
      - env:
        - name: HOST_GID
          value: "1002"
        - name: HOST_UID
          value: "1002"
        image: yurilchuk/utorrent-kubernetes:latest
        name: utorrent
        ports:
        - containerPort: 8080
        - containerPort: 6881
        resources: {}
        volumeMounts:
        - mountPath: /utorrent/shared/
          name: utorrent-data
      restartPolicy: Always
      securityContext:
        supplementalGroups: [65534]
      volumes:
      - name: utorrent-data
        persistentVolumeClaim:
          claimName: ut-pvc
status: {}