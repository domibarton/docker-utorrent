apiVersion: v1
kind: Namespace
metadata:
  name: utorrent

---

kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  name: ut-sc
  namespace: utorrent
provisioner: kubernetes.io/no-provisioner
volumeBindingMode: WaitForFirstConsumer

---

kind: PersistentVolume
apiVersion: v1
metadata:
  name: ut-pv
  namespace: utorrent
spec:
  storageClassName: ut-sc
  capacity:
    storage: 100Gi
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  hostPath:
    path: "/storage/hd0/utorrent"

---

kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: ut-pvc
  namespace: utorrent
spec:
  storageClassName: ut-sc
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 100Gi

---

apiVersion: v1
kind: Service
metadata:
  name: ut-service
  namespace: utorrent
spec:
  ports:
   - name: http
     port: 8080
     targetPort: 8080
   - name: tcp
     port: 6881
     targetPort: 6881
  externalIPs: 
    - 10.1.1.200
  selector:
    app: utorrent

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: ut-deployment
  namespace: utorrent
spec:
  replicas: 1
  selector:
      matchLabels:
        app: utorrent
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: utorrent
    spec:
      containers:
      - env:
        - name: HOST_GID
          value: "1002"
        - name: HOST_UID
          value: "1002"
        image: yurilchuk/utorrent-kubernetes:latest
        name: utorrent
        ports:
        - containerPort: 8080
        - containerPort: 6881
        resources: {}
        volumeMounts:
        - mountPath: /utorrent/shared/
          name: utorrent-data
      restartPolicy: Always
      securityContext:
        supplementalGroups: [65534]
      volumes:
      - name: utorrent-data
        persistentVolumeClaim:
          claimName: ut-pvc
status: {}

---

apiVersion: v1
kind: Secret
metadata:
  name: ut-secret
  namespace: utorrent
data:
  tls.crt: base64 encoded cert
  tls.key: base64 encoded key
type: kubernetes.io/tls

---

apiVersion: networking.k8s.io/v1
kind: IngressClass
metadata:
  name: ut-ingressclass
  namespace: utorrent
spec:
  controller: nginx.org/ingress-controller 

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ut-ingress
  namespace: utorrent
spec:
  defaultBackend:
    service:
      name: ut-service
      port:
        number: 8080
  ingressClassName: ut-ingressclass
  tls:
  - hosts:
    - utorrent.nb41.tech
    secretName: ut-secret
  rules:
  - host: utorrent.nb41.tech
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: ut-service
            port:
              number: 8080
